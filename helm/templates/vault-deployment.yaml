apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: vault
  template:
    metadata:
      labels:
        app: vault
    spec:
      securityContext:
        fsGroup: {{ .Values.server.securityContext.fsGroup }}
      initContainers:
        - name: fix-permissions
          image: busybox
          command: [ "sh", "-c", "chown -R 1000:1000 /vault/data && chmod -R 770 /vault/data" ]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: vault-data
              mountPath: /vault/data

      containers:
      - name: vault
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.port }}
        
        env:
        - name: VAULT_ADDR
          value: "{{ .Values.vault.addr }}"  
        - name: VAULT_EXTERNAL_ADDR
          value: "{{ .Values.vault.externalAddr }}"  
        - name: VAULT_CLUSTER_ADDR
          value: "{{ .Values.vault.clusterAddr }}"
        - name: VAULT_TLS_CERT_FILE
          value: "{{ .Values.certificates.tlsCrtPath }}"
        - name: VAULT_TLS_KEY_FILE
          value: "{{ .Values.certificates.tlsKeyPath }}" 

        volumeMounts:
        - name: vault-config
          mountPath: /etc/vault.d
          readOnly: true
        - name: vault-ssl-cert
          mountPath: /vault/certs
          readOnly: true 
        - name: vault-data
          mountPath: /vault/data  

        command: ["vault"]
        args: ["server", "-config=/etc/vault.d/vault.hcl"]

        securityContext:
          runAsNonRoot: true
          runAsUser: {{ .Values.server.securityContext.runAsUser }}
          capabilities:
            drop: 
              - ALL
            add:
              - IPC_LOCK

        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10

        readinessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3

      volumes:
      - name: vault-config
        configMap:
          name: vault-config
      - name: vault-ssl-cert
        secret:
          secretName: vault-ssl-cert  
      - name: vault-data
        persistentVolumeClaim:
          claimName: vault-pvc  

      imagePullSecrets:
      - name: jfrog-registry-secret
