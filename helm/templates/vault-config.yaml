<<<<<<< HEAD:helm/templates/vault-config.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: vault-deployment
data:
  vault.hcl: |
    # Storage backend using Raft
    storage "raft" {
      path    = "{{ .Values.storage.path }}"
      node_id = "vault-0"
    }

    # Listener configuration for Vault 
    listener "tcp" {
      address         = "0.0.0.0:8200"  
      tls_disable     = 0
      tls_cert_file   = "{{ .Values.certificates.tlsCrtPath }}"
      tls_key_file    = "{{ .Values.certificates.tlsKeyPath }}"
      tls_ca_file   = "{{ .Values.certificates.caCrtPath }}"  # Reference CA certificate
    }

    # API address
    api_addr = "https://vault.minikube.local:8200"  # âœ… Match Ingress hostname  # Set to the correct external IP

    # Cluster address (for Raft)
    cluster_addr = "https://vault-0.vault-internal:8201"  # Internal DNS for Raft  
    
    ui = true
    disable_mlock = true
=======
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: vault-deployment
data:
  vault.hcl: |
    # Storage backend using Raft for HA
    storage "raft" {
      path    = "/vault/data"
      node_id = "vault-0"  # Ensure unique node_id for each instance
    }

    # Listener configuration for Vault
    listener "tcp" {
      address         = "0.0.0.0:8200"
      tls_disable     = 0
      tls_cert_file   = "/vault/certs/tls.crt"
      tls_key_file    = "/vault/certs/tls.key"
    }

    # API address for external access
    api_addr = "https://vault.minikube.local"  # Use Ingress host

    # Cluster address for Raft communication
    cluster_addr = "https://vault.vault-deployment.svc.cluster.local:8201"

    # Enable the Vault UI
    ui = true
<<<<<<< HEAD
    disable_mlock = true
>>>>>>> upstream/main:helm/templates/vault-config.yaml
=======

    # Disable memory lock to allow running as a non-root user
    disable_mlock = true

    # Seal configuration using Shamir Secret Sharing
    seal "shamir" {
      secret_shares    = 3
      secret_threshold = 2
    }

    telemetry {
      prometheus_retention_time = "24h"
    }
>>>>>>> upstream/main
