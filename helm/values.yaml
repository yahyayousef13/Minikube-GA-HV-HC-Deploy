# Number of replicas for the Vault deployment
replicaCount: 1

# Image configuration for the Vault server
image:
  repository: trial4w4crx.jfrog.io/vault-repo/vault-server
  tag: "latest"
  pullPolicy: IfNotPresent

# Service configuration for accessing Vault
service:
  type: ClusterIP # Change to LoadBalancer for cloud environments
  port: 8200      # The port exposed by the servicel
  nodePort: 32000  # Set a fixed NodePort


# Vault addresses for internal and external access
vault:
  addr: "https://vault.minikube.local:8200"  # âœ… Match Ingress  # Updated to match the certificate SAN
  externalAddr: "https://10.244.0.23:8200"
  clusterAddr: "https://vault-0.vault-internal:8201"


# Storage configuration for Vault
storage:
  backend: "raft"  # Use "file" for non-HA
  path: "/vault/data"

# SSL certificate paths
certificates:
  tlsCrtPath: "/vault/certs/tls.crt"
  tlsKeyPath: "/vault/certs/tls.key"
  caCrtPath: "/vault/certs/ca.crt"

# Security context for the Vault server
server:
  securityContext:
<<<<<<< HEAD
    runAsUser:  100
    fsGroup: 100
=======
    runAsUser:  1000
    fsGroup: 1000
>>>>>>> upstream/main
    runAsNonRoot: true

  # Init container to fix permissions on the data directory
  extraInitContainers:
    - name: fix-permissions
      image: busybox
      command: [ "sh", "-c", "chown -R 1000:1000 /vault/data && chmod -R 770 /vault/data" ]
      securityContext:
        runAsUser:  0
      volumeMounts:
        - name: data
          mountPath: /vault/data

  volumeMounts:
    - mountPath: /vault/data
      name: data

# Persistent volume configuration
volumes:
  - name: vault-data
    persistentVolumeClaim:
      claimName: vault-pvc # Ensure PVC exists in your deployment